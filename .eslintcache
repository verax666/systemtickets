[{"C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\index.js":"1","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\reportWebVitals.js":"2","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\App.js":"3","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\views\\Faq\\faqView.js":"4","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\components\\Faq\\faq.js":"5","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\components\\Faq\\Faqs\\faqs.js":"6","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\components\\NavBar\\navBar.js":"7","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\components\\ReportsTable\\reportsTable.js":"8","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\services\\Methods\\methodsTickets.js":"9","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\views\\FullReport\\fullReport.js":"10","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\views\\FullReport\\fullReport.css.js":"11","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\views\\NewReport\\newReport.js":"12","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\views\\InterfaceDialog\\interfaceDialog.js":"13","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\views\\NewReport\\newReportcss.js":"14","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\views\\NewReport\\Alerts\\Alerts.js":"15","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\components\\NavBar\\navBarcss.js":"16","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\views\\privateRoute\\privateRoute.js":"17","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\views\\privateRoute\\auth\\auth.js":"18","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\views\\Home\\home.js":"19","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\services\\Methods\\validateClient.js":"20","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\views\\LoginClient\\loginClient.js":"21","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\views\\privateadmin\\privateAdmin.js":"22","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\views\\Admin\\admin.js":"23","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\views\\LoginEmployes\\loginEmployes.js":"24"},{"size":455,"mtime":1611332720144,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":499162500000,"results":"27","hashOfConfig":"26"},{"size":1897,"mtime":1612312794419,"results":"28","hashOfConfig":"26"},{"size":611,"mtime":1612310353388,"results":"29","hashOfConfig":"26"},{"size":283,"mtime":1611351384674,"results":"30","hashOfConfig":"26"},{"size":494,"mtime":1611266344893,"results":"31","hashOfConfig":"26"},{"size":480,"mtime":1612310958425,"results":"32","hashOfConfig":"26"},{"size":5899,"mtime":1612312016735,"results":"33","hashOfConfig":"26"},{"size":1474,"mtime":1612369612313,"results":"34","hashOfConfig":"26"},{"size":4202,"mtime":1611793991758,"results":"35","hashOfConfig":"26"},{"size":1791,"mtime":1611763904465,"results":"36","hashOfConfig":"26"},{"size":4147,"mtime":1612310715023,"results":"37","hashOfConfig":"26"},{"size":2115,"mtime":1611792169137,"results":"38","hashOfConfig":"26"},{"size":852,"mtime":1611763939463,"results":"39","hashOfConfig":"26"},{"size":1208,"mtime":1611938139066,"results":"40","hashOfConfig":"26"},{"size":2078,"mtime":1612305746294,"results":"41","hashOfConfig":"26"},{"size":541,"mtime":1612304512928,"results":"42","hashOfConfig":"26"},{"size":299,"mtime":1612302471392,"results":"43","hashOfConfig":"26"},{"size":99,"mtime":1612286058153,"results":"44","hashOfConfig":"26"},{"size":787,"mtime":1612369606401,"results":"45","hashOfConfig":"26"},{"size":734,"mtime":1612304426953,"results":"46","hashOfConfig":"26"},{"size":581,"mtime":1612311148033,"results":"47","hashOfConfig":"26"},{"size":2715,"mtime":1612311112923,"results":"48","hashOfConfig":"26"},{"size":1152,"mtime":1612311828876,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1qidj17",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\index.js",[],["104","105"],"C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\reportWebVitals.js",[],"C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\App.js",["106"],"import { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport NavBar from './components/NavBar/navBar';\nimport FaqView from './views/Faq/faqView';\nimport PrivateRoute from './views/privateRoute/privateRoute';\nimport { AuthContext, AuthContextAdmin } from './views/privateRoute/auth/auth';\nimport { useState } from 'react';\nimport Home from './views/Home/home';\nimport LoginClient from './views/LoginClient/loginClient';\nimport PrivateAdmin from './views/privateadmin/privateAdmin'\nimport admin from './views/Admin/admin';\nimport { LoginEmplyed } from './views/LoginEmployes/loginEmployes';\nfunction App() {\n  const ClientsToken = (localStorage.getItem(\"istokenClient\"));\n  const [authTokensClients, setAuthTokensClients] = useState(ClientsToken);\n  const setTokensClients = (data) => {\n    localStorage.setItem(\"istokenClient\", (data));\n    setAuthTokensClients(data);\n  }\n\n  const EmployesToken = (localStorage.getItem(\"istokenEmployes\"));\n  const [authTokensEmployes, setAuthTokensEmployes] = useState(EmployesToken);\n  const setTokensEmployes = (data) => {\n    localStorage.setItem(\"istokenEmployes\", (data));\n    setAuthTokensEmployes(data);\n  }\n  return (\n    <BrowserRouter>\n      <AuthContext.Provider value={{ authTokensClients, setAuthTokensClients: setTokensClients }}>\n        <AuthContextAdmin.Provider value={{ authTokensEmployes, setAuthTokensEmployes: setTokensEmployes }}>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/helper/:id\" component={LoginClient}>\n            </Route>\n            <PrivateRoute path=\"/helper\" component={FaqView} />\n            <PrivateAdmin path=\"/admin\" component={admin} />\n            <Route path=\"/login\" component={LoginEmplyed} />\n          </Switch>\n        </AuthContextAdmin.Provider>\n      </AuthContext.Provider>\n    </BrowserRouter>\n  )\n}\n\nexport default App;\n","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\views\\Faq\\faqView.js",["107"],"import React, { Component } from 'react'\r\nimport { Grid } from '@material-ui/core';\r\nimport Faq from '../../components/Faq/faq';\r\nimport ReportTable from '../../components/ReportsTable/reportsTable';\r\nimport NavBar from '../../components/NavBar/navBar';\r\n\r\nfunction faqView() {\r\n\r\n\r\n    return (<>\r\n        <NavBar title={\"Helper\"} />\r\n        < Grid container >\r\n            <Grid item xl={4} lg={4} md={4} sm={12} xs={12} >  <Faq /></Grid>\r\n            <Grid item xl={8} lg={8} md={8} sm={12} xs={12}><ReportTable typeuser={\"client\"} /></Grid>\r\n        </Grid>\r\n    </>\r\n    );\r\n\r\n}\r\n\r\nexport default faqView;","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\components\\Faq\\faq.js",[],"C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\components\\Faq\\Faqs\\faqs.js",[],"C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\components\\NavBar\\navBar.js",[],"C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\components\\ReportsTable\\reportsTable.js",["108","109"],"import React, { useEffect, useState } from \"react\";\r\nimport { DataGrid, } from '@material-ui/data-grid'\r\nimport MethodsTickets from '../../services/Methods/methodsTickets'\r\nimport { Button, Grid, Typography } from \"@material-ui/core\";\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\nimport fullReportcss from '../../views/FullReport/fullReport.css'\r\nimport InterfaceDialog from '../../views/InterfaceDialog/interfaceDialog'\r\n\r\nfunction ReportTable(props) {\r\n    const classes = fullReportcss();\r\n    const classMethods = new MethodsTickets();\r\n    const [isrefresh, setRefresh] = useState(false);\r\n    const [pagesize, setPageSize] = useState(10);\r\n    const [items, setItems] = useState([]);\r\n    const [isUpdate, setUpdate] = useState(true)\r\n    const [loading, setLoading] = useState(false);\r\n    const [page, setPage] = useState(1);\r\n    const [countsrow, setrow] = useState(0);\r\n    const [id, setId] = useState(undefined)\r\n    const [visibleInterfaceDialog, setvisibleInterfaceDialog] = useState(false)\r\n    const [Result, setResult] = useState(undefined);\r\n\r\n    const [ilabels, setIlabels] = useState([\r\n        { field: 'id', headerName: 'ID', flex: .2 },\r\n        { field: 'title', headerName: 'TITULO', flex: .3 },\r\n        { field: 'process', headerName: 'PROCESO', flex: .3 },\r\n        { field: 'description', headerName: 'DESCRIPCIÓN', flex: .3 },\r\n        {\r\n            field: 'status', headerName: 'STATUS', flex: .3, renderCell: (row) =>\r\n                (<Typography>{row.value} <FiberManualRecordIcon className={selectStatusbk(row)}></FiberManualRecordIcon></Typography>)\r\n        },\r\n        {\r\n            field: 'updatedAt', headerName: \"Actualizado en\", flex: .3, renderCell: (row) =>\r\n                (< strong >{formato((row.value).substr(0, 10))} </strong >)\r\n        },\r\n        {\r\n            field: 'createdAt', headerName: 'Creado en', flex: .4, renderCell: (row) =>\r\n            (< Grid container >\r\n                <span style={{ height: \"20px\", marginBottom: \"0\" }}>\r\n                    {formato((row.value).substr(0, 10))}\r\n                </span>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    style={{ margin: \"40px 0\" }}\r\n                    onClick={() => isvisibleInterfaceDialog(row.row.id, undefined)}\r\n                >Ver Reporte</Button>\r\n            </ Grid >)\r\n        }]);\r\n\r\n    useEffect(() => {\r\n        let active = true;\r\n        (async () => {\r\n            setLoading(true);\r\n            setUpdate(true);\r\n            await UpdateTable(page, pagesize, localStorage.getItem(\"tokenClient\"));\r\n            await setLoading(false);\r\n            if (!active) {\r\n                return;\r\n            }\r\n        })();\r\n\r\n        return () => {\r\n            active = false;\r\n        };\r\n    }, [page, items, pagesize, isrefresh]);\r\n\r\n    function formato(texto) {\r\n        return texto.replace(/^(\\d{4})-(\\d{2})-(\\d{2})$/g, '$3/$2/$1');\r\n    }\r\n    const handlePageChange = (params) => {\r\n        setPage(params.page);\r\n    }\r\n\r\n    const handlepagresize = (params) => {\r\n        if (params.page > params.pageCount) {\r\n            setPage(page - 1)\r\n        }\r\n        setPageSize(params.pageSize)\r\n    }\r\n\r\n    const selectStatusbk = (idStatus) => {\r\n        switch (idStatus.value) {\r\n            case 0: {\r\n\r\n                return classes.green;\r\n            }\r\n            case 1: {\r\n                return classes.yellow;\r\n            }\r\n            case 2: {\r\n                return classes.red;\r\n            }\r\n            default: {\r\n                return classes.white;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    async function UpdateTable(n, it, id_client) {\r\n        if (isUpdate) {\r\n            switch (props.typeuser) {\r\n                case \"client\":\r\n                    classMethods.getTickets(n, it, id_client).then(res => {\r\n                        setUpdate(false);\r\n                        setrow(res.totalItems);\r\n                        setItems(res.tickets);\r\n                    });\r\n                    break;\r\n                case \"admin\":\r\n                    classMethods.getAllTickets(n, it).then(res => {\r\n                        setUpdate(false);\r\n                        setrow(res.totalItems);\r\n                        setItems(res.tickets);\r\n                    })\r\n                    break;\r\n                default:\r\n                    break;\r\n\r\n            }\r\n        } else { }\r\n    }\r\n    const visibleSuccess = () => {\r\n        return Result;\r\n    }\r\n    const isvisibleInterfaceDialog = (row, res) => {\r\n        setId(row);\r\n        setResult(res);\r\n        setvisibleInterfaceDialog(!visibleInterfaceDialog)\r\n    }\r\n    const refreshtable = () => {\r\n        setRefresh(!isrefresh);\r\n    }\r\n\r\n\r\n    return (\r\n        <div style={{ height: 1000, width: \"100%\" }}>\r\n            <Button style={{ position: \"relative\", top: 0 }} onClick={() => isvisibleInterfaceDialog()} >Crear Ticket</Button>\r\n            <DataGrid disableColumnMenu showToolbar disableDensitySelector paginationMode=\"server\"\r\n                page={page}\r\n                onPageChange={handlePageChange}\r\n                loading={loading}\r\n                pageSize={10} rows={items} columns={ilabels}\r\n                rowCount={countsrow}\r\n                rowHeight={85}\r\n                rowsPerPageOptions={[10, 20, 40]}\r\n                onPageSizeChange={handlepagresize}\r\n            />;\r\n            {!visibleInterfaceDialog ? <></> :\r\n                <InterfaceDialog\r\n                    isopen={visibleInterfaceDialog}\r\n                    callback={isvisibleInterfaceDialog}\r\n                    id={id}\r\n                    refresh={refreshtable}\r\n                />}\r\n            {Result !== undefined ? visibleSuccess() : Result}\r\n\r\n        </div >\r\n    );\r\n\r\n}\r\n\r\nexport default ReportTable;","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\services\\Methods\\methodsTickets.js",[],"C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\views\\FullReport\\fullReport.js",[],"C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\views\\FullReport\\fullReport.css.js",[],"C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\views\\NewReport\\newReport.js",[],"C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\views\\InterfaceDialog\\interfaceDialog.js",[],"C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\views\\NewReport\\newReportcss.js",[],"C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\views\\NewReport\\Alerts\\Alerts.js",[],"C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\components\\NavBar\\navBarcss.js",[],"C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\views\\privateRoute\\privateRoute.js",[],"C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\views\\privateRoute\\auth\\auth.js",[],"C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\views\\Home\\home.js",[],"C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\services\\Methods\\validateClient.js",[],"C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\views\\LoginClient\\loginClient.js",["110"],"import { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport validateClient from '../../services/Methods/validateClient'\r\n\r\n\r\nfunction LoginClient(props) {\r\n    const { match: { params } } = props;\r\n    let [islogin, setlogin] = useState(false);\r\n\r\n    function checklogin() {\r\n        validateClient(0, 5, params.id);\r\n    }\r\n    useEffect(() => {\r\n        setlogin(localStorage.getItem(\"istokenClient\"));\r\n    }, [localStorage.getItem(\"istokenClient\")])\r\n\r\n    return (\r\n        <div>\r\n            {islogin ?\r\n                <Redirect to=\"/helper\" > </Redirect> : <div> {checklogin()} </div>\r\n            }\r\n\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default LoginClient;","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\views\\privateadmin\\privateAdmin.js",[],"C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\views\\Admin\\admin.js",["111","112","113","114","115","116","117"],"import { Button, Divider, Drawer, IconButton, List, ListItem, ListItemIcon, ListItemText, makeStyles, Menu, MenuItem, Typography } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport NavBar from \"../../components/NavBar/navBar\";\r\nimport clsx from 'clsx';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport ReportTable from \"../../components/ReportsTable/reportsTable\";\r\nimport Home from \"../Home/home\";\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\nexport default function Admin() {\r\n    const useStyles = makeStyles({\r\n        list: {\r\n            width: 250,\r\n        },\r\n        fullList: {\r\n            width: 'auto',\r\n        },\r\n        btn: {\r\n            marginRight: \"10px\"\r\n        },\r\n        center: {\r\n            textAlign: \"center\"\r\n        },\r\n        btnend: {\r\n            position: \"absolute\",\r\n            right: \"0px\"\r\n        },\r\n    });\r\n    const classes = useStyles();\r\n    const [state, setState] = React.useState({\r\n        left: false\r\n    });\r\n    const [vista, setVista] = React.useState(<ReportTable typeuser={\"admin\"} />);\r\n\r\n    const list = (anchor) => (\r\n        <div\r\n            className={clsx(classes.list)}\r\n            role=\"presentation\"\r\n            onClick={toggleDrawer(anchor, false)}\r\n            onKeyDown={toggleDrawer(anchor, false)}\r\n        >\r\n            <List>\r\n                <Typography variant=\"h6\" className={classes.center}>Administrador</Typography>\r\n            </List>\r\n            <Divider />\r\n            <List>\r\n                <ListItem button onClick={() => setVista(<ReportTable typeuser={\"admin\"} />)} >\r\n                    Tickets\r\n                </ListItem>\r\n                <ListItem button onClick={() => setVista(<Home />)} >\r\n                    Cotizaciones\r\n                </ListItem>\r\n\r\n            </List>\r\n        </div>\r\n    );\r\n    const toggleDrawer = (anchor, open) => (event) => {\r\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n            return;\r\n        }\r\n\r\n        setState({ ...state, [anchor]: open });\r\n    };\r\n\r\n    const exit = () => {\r\n        localStorage.removeItem(\"istokenEmployes\")\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <NavBar title={\"Dashboard\"} btn={<IconButton className={classes.btn} onClick={toggleDrawer(\"left\", true)}><MenuIcon /></IconButton>} logout={<IconButton className={classes.btnend} onClick={exit}><ExitToAppIcon /></IconButton>} >    </NavBar>\r\n            <Drawer anchor={\"left\"} open={state[\"left\"]} onClose={toggleDrawer(\"left\", false)}>\r\n                {list(\"left\")}\r\n            </Drawer>\r\n            {vista}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\views\\LoginEmployes\\loginEmployes.js",[],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":3,"column":8,"nodeType":"124","messageId":"125","endLine":3,"endColumn":14},{"ruleId":"122","severity":1,"message":"126","line":1,"column":17,"nodeType":"124","messageId":"125","endLine":1,"endColumn":26},{"ruleId":"122","severity":1,"message":"127","line":23,"column":21,"nodeType":"124","messageId":"125","endLine":23,"endColumn":31},{"ruleId":"128","severity":1,"message":"129","line":67,"column":8,"nodeType":"130","endLine":67,"endColumn":42,"suggestions":"131"},{"ruleId":"128","severity":1,"message":"132","line":16,"column":9,"nodeType":"133","endLine":16,"endColumn":46},{"ruleId":"122","severity":1,"message":"134","line":1,"column":10,"nodeType":"124","messageId":"125","endLine":1,"endColumn":16},{"ruleId":"122","severity":1,"message":"135","line":1,"column":63,"nodeType":"124","messageId":"125","endLine":1,"endColumn":75},{"ruleId":"122","severity":1,"message":"136","line":1,"column":77,"nodeType":"124","messageId":"125","endLine":1,"endColumn":89},{"ruleId":"122","severity":1,"message":"137","line":1,"column":103,"nodeType":"124","messageId":"125","endLine":1,"endColumn":107},{"ruleId":"122","severity":1,"message":"138","line":1,"column":109,"nodeType":"124","messageId":"125","endLine":1,"endColumn":117},{"ruleId":"122","severity":1,"message":"139","line":2,"column":17,"nodeType":"124","messageId":"125","endLine":2,"endColumn":25},{"ruleId":"122","severity":1,"message":"140","line":6,"column":10,"nodeType":"124","messageId":"125","endLine":6,"endColumn":18},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"no-unused-vars","'NavBar' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","'setIlabels' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'UpdateTable'. Either include it or remove the dependency array.","ArrayExpression",["143"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","'Button' is defined but never used.","'ListItemIcon' is defined but never used.","'ListItemText' is defined but never used.","'Menu' is defined but never used.","'MenuItem' is defined but never used.","'useState' is defined but never used.","'Redirect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"144","fix":"145"},"Update the dependencies array to be: [page, items, pagesize, isrefresh, UpdateTable]",{"range":"146","text":"147"},[2880,2914],"[page, items, pagesize, isrefresh, UpdateTable]"]