[{"C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\index.js":"1","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\reportWebVitals.js":"2","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\App.js":"3","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\views\\Faq\\faqView.js":"4","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\components\\NavBar\\navBar.js":"5","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\components\\ReportsTable\\reportsTable.js":"6","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\services\\Methods\\methodsTickets.js":"7","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\views\\FullReport\\fullReport.js":"8","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\views\\NewReport\\newReport.js":"9","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\views\\InterfaceDialog\\interfaceDialog.js":"10","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\views\\NewReport\\newReportcss.js":"11","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\views\\NewReport\\Alerts\\Alerts.js":"12","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\views\\Home\\home.js":"13","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\services\\Methods\\validateClient.js":"14","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\views\\LoginClient\\loginClient.js":"15","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\views\\Admin\\admin.js":"16","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\views\\LoginEmployes\\loginEmployes.js":"17","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\views\\LoginEmployes\\loginEmployescss.js":"18","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\views\\Cotizador\\Cotizador.js":"19","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\views\\Cotizador\\CotizadorTable\\CotizadorTable.js":"20","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\views\\Cotizador\\CotizadorAdmin\\cotizadorAdmin.js":"21","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\components\\NavBar\\sidebar\\sidebar.js":"22","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\views\\Cotizador\\CotizadorClient\\cotizadorclient.js":"23","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\components\\Description_Helper\\Des_Helper.js":"24","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\components\\Description_Helper\\Des_helper_css.js":"25","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\Axios\\Config.js":"26","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\views\\PrivateRoutes\\contexts\\contextRoutes.js":"27","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\views\\PrivateRoutes\\privateadmin\\privateAdmin.js":"28","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\views\\PrivateRoutes\\privateHelper\\privateHelper.js":"29","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\services\\Methods\\StatusCatalog\\StatusService.js":"30","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\components\\Faq_View\\Faqs_View.js":"31","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\components\\Faq_View\\Faqs\\Faqs.js":"32","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\components\\NavBar\\navBar_css.js":"33","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\axios\\Config.js":"34","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\views\\FullReport\\fullReport_css.js":"35","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\services\\Methods\\Clients\\ClientService.js":"36"},{"size":455,"mtime":1611332720144,"results":"37","hashOfConfig":"38"},{"size":362,"mtime":499162500000,"results":"39","hashOfConfig":"38"},{"size":2412,"mtime":1612891464089,"results":"40","hashOfConfig":"38"},{"size":2030,"mtime":1612892150355,"results":"41","hashOfConfig":"38"},{"size":1230,"mtime":1612891733868,"results":"42","hashOfConfig":"38"},{"size":10833,"mtime":1612893921914,"results":"43","hashOfConfig":"38"},{"size":1531,"mtime":1612893925932,"results":"44","hashOfConfig":"38"},{"size":5899,"mtime":1612892081588,"results":"45","hashOfConfig":"38"},{"size":5821,"mtime":1612893231506,"results":"46","hashOfConfig":"38"},{"size":2189,"mtime":1612892084598,"results":"47","hashOfConfig":"38"},{"size":942,"mtime":1612887764635,"results":"48","hashOfConfig":"38"},{"size":1208,"mtime":1611938139066,"results":"49","hashOfConfig":"38"},{"size":99,"mtime":1612286058153,"results":"50","hashOfConfig":"38"},{"size":777,"mtime":1612891954086,"results":"51","hashOfConfig":"38"},{"size":733,"mtime":1612815503640,"results":"52","hashOfConfig":"38"},{"size":2249,"mtime":1612891203945,"results":"53","hashOfConfig":"38"},{"size":3086,"mtime":1612891771112,"results":"54","hashOfConfig":"38"},{"size":443,"mtime":1612378794315,"results":"55","hashOfConfig":"38"},{"size":109,"mtime":1612454616732,"results":"56","hashOfConfig":"57"},{"size":115,"mtime":1612460251344,"results":"58","hashOfConfig":"57"},{"size":117,"mtime":1612465635264,"results":"59","hashOfConfig":"38"},{"size":1634,"mtime":1612544273041,"results":"60","hashOfConfig":"38"},{"size":119,"mtime":1612484838982,"results":"61","hashOfConfig":"38"},{"size":330,"mtime":1612553298780,"results":"62","hashOfConfig":"38"},{"size":188,"mtime":1612553579444,"results":"63","hashOfConfig":"38"},{"size":184,"mtime":1612890385674,"results":"64","hashOfConfig":"38"},{"size":450,"mtime":1612890981532,"results":"65","hashOfConfig":"38"},{"size":581,"mtime":1612891709389,"results":"66","hashOfConfig":"38"},{"size":567,"mtime":1612891551985,"results":"67","hashOfConfig":"38"},{"size":318,"mtime":1612891791923,"results":"68","hashOfConfig":"38"},{"size":374,"mtime":1612890538327,"results":"69","hashOfConfig":"38"},{"size":496,"mtime":1612890536911,"results":"70","hashOfConfig":"38"},{"size":1523,"mtime":1612890587736,"results":"71","hashOfConfig":"38"},{"size":185,"mtime":1612896155492,"results":"72","hashOfConfig":"38"},{"size":2420,"mtime":1612892079551,"results":"73","hashOfConfig":"38"},{"size":351,"mtime":1612892130730,"results":"74","hashOfConfig":"38"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},"12poc7w",{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"77"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"77"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"77"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"77"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"77"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"77"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qidj17",{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"77"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"77"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},"C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\index.js",[],["157","158"],"C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\reportWebVitals.js",[],"C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\App.js",[],"C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\views\\Faq\\faqView.js",["159"],"import React, { useState } from 'react'\r\nimport { Grid, IconButton, makeStyles } from '@material-ui/core';\r\nimport Faq from '../../components/Faq_View/Faqs_View';\r\nimport ReportTable from '../../components/ReportsTable/reportsTable';\r\nimport NavBar from '../../components/NavBar/navBar';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { useEffect } from 'react';\r\nimport Des_Helper from '../../components/Description_Helper/Des_Helper';\r\nimport { useAuthClient } from '../PrivateRoutes/contexts/contextRoutes';\r\n\r\nfunction FaqView() {\r\n    const useStyles = makeStyles({\r\n        list: {\r\n            width: 250,\r\n        },\r\n        fullList: {\r\n            width: 'auto',\r\n        },\r\n        btn: {\r\n            marginRight: \"40px\"\r\n        },\r\n        center: {\r\n            textAlign: \"center\"\r\n        },\r\n        btnend: {\r\n            position: \"absolute\",\r\n            right: \"20px\",\r\n        },\r\n    });\r\n    const { setAuthTokensClients } = useAuthClient();\r\n\r\n    const classes = useStyles();\r\n    const [change, setChange] = useState(false);\r\n    useEffect(() => {\r\n    }, [change]);\r\n\r\n    const exit = () => {\r\n        setAuthTokensClients(false)\r\n        localStorage.removeItem(\"istokenClient\")\r\n        setChange(true);\r\n    }\r\n\r\n    return (<>\r\n        {!change ?\r\n            <>\r\n                <NavBar title={\"Helper\"} tickets={\"/helper/tickets\"} cotizaciones={\"\"} logout={<IconButton className={classes.btnend} onClick={() => exit()}><ExitToAppIcon /></IconButton>} />\r\n                < Grid container >\r\n                    <Grid item xl={12} lg={12} md={12} sm={12} xs={12} > <Des_Helper /></Grid>\r\n                    <Grid item xl={5} lg={5} md={5} sm={12} xs={12} >  <Faq /></Grid>\r\n                    <Grid item xl={7} lg={7} md={7} sm={12} xs={12}><ReportTable typeuser=\"client\" /></Grid>\r\n                </Grid>\r\n            </>\r\n            :\r\n            <Redirect to=\"/\" />\r\n        }</>\r\n    );\r\n\r\n}\r\n\r\nexport default FaqView;","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\components\\NavBar\\navBar.js",[],"C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\components\\ReportsTable\\reportsTable.js",["160"],"import React, { useEffect, useState } from \"react\";\r\nimport { DataGrid, } from '@material-ui/data-grid'\r\nimport MethodsTickets from '../../services/Methods/methodsTickets'\r\nimport { Button, FormControl, Grid, IconButton, InputLabel, MenuItem, Select, Typography } from \"@material-ui/core\";\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\nimport fullReportcss from '../../views/FullReport/fullReport_css'\r\nimport InterfaceDialog from '../../views/InterfaceDialog/interfaceDialog'\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport statusCatalog from \"../../services/Methods/StatusCatalog/StatusService\";\r\n\r\nfunction ReportTable(props) {\r\n    const classes = fullReportcss();\r\n    const classMethods = new MethodsTickets();\r\n    const [isrefresh, setRefresh] = useState(false);\r\n    const [pagesize, setPageSize] = useState(10);\r\n    const [items, setItems] = useState([]);\r\n    const [isUpdate, setUpdate] = useState(true)\r\n    const [loading, setLoading] = useState(false);\r\n    const [page, setPage] = useState(1);\r\n    const [countsrow, setrow] = useState(0);\r\n    const [id, setId] = useState(undefined)\r\n    const [visibleInterfaceDialog, setvisibleInterfaceDialog] = useState(false)\r\n    const [Result, setResult] = useState(undefined);\r\n    const procesos = statusCatalog();\r\n\r\n    const [ilabels, setIlabels] = useState([]);\r\n\r\n    const changeStatus = (id, status) => {\r\n        classMethods.updateTicket(id, status.target.value).then(() => setRefresh(!isrefresh));\r\n\r\n    }\r\n\r\n    function formato(texto) {\r\n        return texto.replace(/^(\\d{4})-(\\d{2})-(\\d{2})$/g, '$3/$2/$1');\r\n    }\r\n    const handlePageChange = (params) => {\r\n        setPage(params.page);\r\n    }\r\n\r\n    const handlepagresize = (params) => {\r\n        if (params.page > params.pageCount) {\r\n            setPage(page - 1)\r\n        }\r\n        setPageSize(params.pageSize)\r\n    }\r\n\r\n    const selectStatusbk = (idStatus) => {\r\n        switch (idStatus) {\r\n            case 1: {\r\n\r\n                return classes.green;\r\n            }\r\n            case 2: {\r\n                return classes.gray;\r\n            }\r\n            case 3: {\r\n                return classes.blue;\r\n            }\r\n            case 4: {\r\n                return classes.yellow;\r\n            }\r\n            default: {\r\n                return classes.white;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    const UpdateTable = async (n, it, id_client) => {\r\n        if (isUpdate) {\r\n            switch (props.typeuser) {\r\n                case \"client\":\r\n                    classMethods.getTickets(n, it, id_client).then(res => {\r\n                        setUpdate(false);\r\n                        setrow(res.totalItems);\r\n                        setItems(res.tickets);\r\n                        setIlabels([\r\n                            { field: 'id', headerName: 'ID', flex: .2 },\r\n                            { field: 'title', headerName: 'TITULO', flex: .3 },\r\n                            { field: 'process', headerName: 'PROCESO', flex: .4 },\r\n                            { field: 'description', headerName: 'DESCRIPCIÓN', flex: .3 },\r\n                            {\r\n                                field: 'status', headerName: 'STATUS', flex: .3, renderCell: (row) =>\r\n                                    (<><Typography style={{ display: \"auto\", margin: \"auto\", }} >{row.row.status.name}</Typography> <FiberManualRecordIcon className={selectStatusbk(row.row.status.id)}></FiberManualRecordIcon></>)\r\n                            },\r\n                            {\r\n                                field: 'updatedAt', headerName: \"Actualizado en\", flex: .3, renderCell: (row) =>\r\n                                (< strong >\r\n                                    { formato((row.value).substr(0, 10))}\r\n                                </strong >)\r\n                            },\r\n                            {\r\n                                field: 'createdAt', headerName: 'Creado en', flex: .6, renderCell: (row) =>\r\n                                (< Grid container >\r\n                                    < Grid item style={{ display: \"auto\", margin: \"auto\", }}>\r\n                                        <strong >\r\n                                            {formato((row.value).substr(0, 10))}\r\n                                        </strong>\r\n                                    </Grid>\r\n                                    < Grid item style={{ display: \"auto\", margin: \"auto\", }}>\r\n                                        <IconButton\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size=\"small\"\r\n\r\n                                            onClick={() => isvisibleInterfaceDialog(row.row.id, undefined)}\r\n\r\n                                        ><VisibilityIcon /></IconButton>\r\n                                    </ Grid >\r\n                                </ Grid >)\r\n                            }])\r\n                    });\r\n                    break;\r\n                case \"admin\":\r\n                    classMethods.getAllTickets(n, it).then(res => {\r\n                        setUpdate(false);\r\n                        setrow(res.totalItems);\r\n                        setItems(res.tickets);\r\n                        setIlabels([\r\n                            { field: 'id', headerName: 'ID', flex: .2 },\r\n                            { field: 'title', headerName: 'TITULO', flex: .3 },\r\n                            { field: 'process', headerName: 'PROCESO', flex: .3 },\r\n                            { field: 'description', headerName: 'DESCRIPCIÓN', flex: .3 },\r\n                            {\r\n                                field: 'status', headerName: 'STATUS', flex: .3, renderCell: (row) =>\r\n                                    (<> <Typography style={{ display: \"auto\", margin: \"auto\", }} >{row.row.status.name}</Typography> <FiberManualRecordIcon className={selectStatusbk(row.row.status.id)}></FiberManualRecordIcon></>)\r\n                            },\r\n                            {\r\n                                field: 'updatedAt', headerName: \"Actualizado en\", flex: .3, renderCell: (row) =>\r\n                                (< strong >\r\n                                    { formato((row.value).substr(0, 10))}\r\n                                </strong >)\r\n                            },\r\n                            {\r\n                                field: 'createdAt', headerName: 'Creado en', flex: .4, renderCell: (row) =>\r\n                                (< Grid container >\r\n                                    < Grid item style={{ display: \"auto\", margin: \"auto\", }}>\r\n                                        <strong >\r\n                                            {formato((row.value).substr(0, 10))}\r\n                                        </strong>\r\n                                    </Grid>\r\n                                    <Grid item style={{ display: \"flex\", margin: \"auto\" }}>\r\n                                        <FormControl >\r\n                                            <InputLabel style={{ display: \"flex\", margin: \"auto\" }} htmlFor=\"age-native-simple\">Status </InputLabel>\r\n                                            <Select\r\n                                                key={row.row.id}\r\n                                                labelId={row.row.title}\r\n                                                id={row.row.id + row.row.title}\r\n                                                value={row.row.status.id}\r\n                                                onChange={changeStatus.bind(this, row.row.id)}\r\n                                            >\r\n                                                {procesos.map((proceso, index) => (\r\n                                                    <MenuItem key={row.row.title + proceso.id + index} value={proceso} >{proceso}</MenuItem>\r\n                                                ))}\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </Grid>\r\n                                    < Grid item style={{ margin: \"auto\", display: \"flex\" }}>\r\n                                        <IconButton\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            size=\"small\"\r\n                                            onClick={() => isvisibleInterfaceDialog(row.row.id, undefined)}\r\n                                        ><VisibilityIcon /></IconButton>\r\n                                    </ Grid >\r\n                                </ Grid >)\r\n                            }])\r\n                    })\r\n                    break;\r\n                default:\r\n                    break;\r\n\r\n            }\r\n        } else { }\r\n    }\r\n    const visibleSuccess = () => {\r\n        return Result;\r\n    }\r\n    const isvisibleInterfaceDialog = (row, res) => {\r\n        setId(row);\r\n        setResult(res);\r\n        setvisibleInterfaceDialog(!visibleInterfaceDialog)\r\n    }\r\n    const refreshtable = () => {\r\n        setRefresh(!isrefresh);\r\n    }\r\n    useEffect(() => {\r\n        let active = true;\r\n        (async () => {\r\n            setLoading(true);\r\n            setUpdate(true);\r\n            await UpdateTable(page, pagesize, localStorage.getItem(\"tokenClient\"));\r\n            await setLoading(false);\r\n            if (!active) {\r\n                return;\r\n            }\r\n        })();\r\n\r\n        return () => {\r\n            active = false;\r\n        };\r\n    }, [page, items, pagesize, isrefresh]);\r\n\r\n    return (\r\n        <div style={{ height: 1000, width: \"100%\" }}>\r\n            <Button className={classes.BtnNewReport} onClick={() => isvisibleInterfaceDialog()} >Crear Ticket</Button>\r\n            <DataGrid disableColumnMenu showToolbar disableDensitySelector paginationMode=\"server\"\r\n                page={page}\r\n                onPageChange={handlePageChange}\r\n                loading={loading}\r\n                pageSize={10} rows={items} columns={ilabels}\r\n                rowCount={countsrow}\r\n                rowHeight={85}\r\n                rowsPerPageOptions={[10, 20, 40]}\r\n                onPageSizeChange={handlepagresize}\r\n            />;\r\n            {!visibleInterfaceDialog ? <></> :\r\n                <InterfaceDialog\r\n                    isadmin={props.isadmin}\r\n                    isopen={visibleInterfaceDialog}\r\n                    callback={isvisibleInterfaceDialog}\r\n                    id={id}\r\n                    refresh={refreshtable}\r\n                />}\r\n            {Result !== undefined ? visibleSuccess() : Result}\r\n\r\n        </div >\r\n    );\r\n\r\n}\r\n\r\nexport default ReportTable;","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\services\\Methods\\methodsTickets.js",[],"C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\views\\FullReport\\fullReport.js",[],"C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\views\\NewReport\\newReport.js",["161","162"],"import { TextField, Select, MenuItem, InputLabel, FormControl, Button, DialogTitle, DialogContent, DialogContentText, DialogActions, Dialog, Grid } from \"@material-ui/core\";\r\nimport React, { useEffect } from 'react';\r\nimport MethodsTickets from \"../../services/Methods/methodsTickets\";\r\nimport newReportcss from './newReportcss';\r\nimport Alerts from './Alerts/Alerts'\r\nimport CGetClients from \"../../services/Methods/Clients/ClientService\";\r\n\r\nexport default function NewReport(props) {\r\n\r\n    // const [openAlert, setOpenAlert] = React.useState(false);\r\n    const [process, setProcess] = React.useState(\"Sin Elección\");\r\n    const [errTitle, setErrTitle] = React.useState(false);\r\n    const [errProcess, setErrProcess] = React.useState(false);\r\n    const [clients, setClients] = React.useState([]);\r\n    const [client, setClient] = React.useState(\"\");\r\n    // Styles\r\n    const classes = newReportcss();\r\n    const postTicket = new MethodsTickets();\r\n    const getClients = new CGetClients();\r\n    const procesos = [\r\n        'Sin Elección',\r\n        'Proceso 1',\r\n        'Proceso 2',\r\n        'Proceso 3',\r\n        'Proceso 4',\r\n        'Proceso 5',\r\n        'Proceso 6',\r\n        'Proceso 7',\r\n    ];\r\n\r\n    useEffect(() => {\r\n        gclients();\r\n    }, [])\r\n\r\n    const gclients = () => {\r\n        Promise.resolve(getClients.getClients().then(res => { setClients(res) }))\r\n    }\r\n    const handleChange = (event) => {\r\n        setProcess(event.target.value);\r\n        setErrProcess(false);\r\n    };\r\n    const handleChangeClient = (event) => {\r\n        setClient(event.target.value);\r\n        setErrProcess(false);\r\n    };\r\n\r\n\r\n    const alertDialog = < Dialog open={props.alertopen} >\r\n        <DialogTitle className={classes.DialogWarning} id=\"alert-dialog-title\">{\"¿Cerrar ventana?\"}</DialogTitle>\r\n        <DialogContent className={classes.DialogWarning}>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n                Se borrara la información de los campos del formulario llenos.\r\n              </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions className={classes.DialogWarning}>\r\n            <Button className={classes.Btns} onClick={props.handleCancel()} color=\"primary\">\r\n                No\r\n              </Button>\r\n            <Button className={classes.Btns} onClick={() => props.callback()} color=\"primary\" autoFocus>\r\n                Si\r\n              </Button>\r\n        </DialogActions></Dialog >;\r\n\r\n    const resultpost = (res) => {\r\n        switch (res) {\r\n            case 1: {\r\n                props.callback(undefined, <Alerts isOpen={true} />);\r\n                props.refresh();\r\n                break;\r\n            }\r\n            case 2: {\r\n\r\n                break;\r\n            }\r\n            default: {\r\n\r\n            }\r\n        }\r\n    }\r\n    const checkFields = () => {\r\n        let titletxt = document.getElementById(\"Title\").value;\r\n        let descriptiontxt = document.getElementById(\"Description\").value;\r\n\r\n        if (titletxt === \"\") {\r\n            setErrTitle(true);\r\n        }\r\n        else if (process === \"Sin Elección\") {\r\n            setErrProcess(true)\r\n        }\r\n        else if (!errProcess && !errTitle) {\r\n            sendTicket(titletxt, descriptiontxt);\r\n        }\r\n    }\r\n\r\n    const sendTicket = (titletxt, descriptiontxt) => {\r\n        if (props.isadmin) {\r\n            postTicket.postTicket({ clientId: client, title: titletxt, process: process, description: descriptiontxt, statusCatalogId: 1 }).then((res) => {\r\n                resultpost(res);\r\n            });\r\n        } else {\r\n\r\n            postTicket.postTicket({ clientId: parseInt(localStorage.getItem(\"ClientId\"), 10), title: titletxt, process: process, description: descriptiontxt, statusCatalogId: 1 }).then((res) => {\r\n                resultpost(res);\r\n            });\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div >\r\n            {props.isadmin ?\r\n\r\n                <FormControl className={classes.FormControl}>\r\n                    <InputLabel htmlFor=\"age-native-simple\">Seleccione el Cliente</InputLabel>\r\n                    <Select error={errProcess} required\r\n                        labelId=\"procesos-lbl\"\r\n                        id=\"procesos-id\"\r\n                        value={client}\r\n                        onChange={handleChangeClient}\r\n                        variant=\"outlined\"\r\n                    >\r\n                        {clients.map((proceso) => (\r\n                            <MenuItem key={proceso.id} value={proceso.id} >{proceso.name}</MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                </FormControl> : null}\r\n\r\n            <TextField id=\"Title\" variant=\"outlined\" label=\"Titulo\" error={errTitle} required onChange={() => setErrTitle(false)} className={classes.TextField} />\r\n            <FormControl className={classes.FormControl}>\r\n                <InputLabel htmlFor=\"age-native-simple\">Seleccione el Proceso</InputLabel>\r\n                <Select error={errProcess} required\r\n                    labelId=\"procesos-lbl\"\r\n                    id=\"procesos-id\"\r\n                    value={process}\r\n                    onChange={handleChange}\r\n                    variant=\"outlined\"\r\n                >\r\n                    {procesos.map((proceso) => (\r\n                        <MenuItem key={proceso} value={proceso} >{proceso}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n            <TextField id=\"Description\" label=\"Descripción\" multiline rows={8} variant=\"outlined\" className={classes.TextField} />\r\n            <FormControl className={classes.FormControl}>\r\n                <Button onClick={() => checkFields()} className={classes.SendBtn}>Enviar</Button>\r\n            </FormControl>\r\n            {alertDialog}\r\n        </div>\r\n    );\r\n\r\n}","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\views\\InterfaceDialog\\interfaceDialog.js",["163"],"import React from 'react';\r\nimport { AppBar, Toolbar, IconButton, Typography, Dialog, Grid } from \"@material-ui/core\";\r\nimport { CloseIcon } from '@material-ui/data-grid';\r\nimport fullReportcss from '../FullReport/fullReport_css';\r\nimport FullReport from '../FullReport/fullReport'\r\nimport NewReport from '../NewReport/newReport';\r\n\r\nexport default function InterfaceDialog(props) {\r\n\r\n    const [open, isOpen] = React.useState(props.isopen);\r\n    const classes = fullReportcss();\r\n    const [alert, setAlert] = React.useState(false);\r\n    const handleClickClose = () => {\r\n        props.id !== undefined ? dialog() : setAlert(!alert);\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        setAlert(!alert);\r\n    }\r\n\r\n    const dialog = (id, res) => {\r\n        isOpen(false);\r\n        props.callback(undefined, res);\r\n    }\r\n\r\n    let title = \"\";\r\n\r\n    const selectedDialog = () => {\r\n\r\n        switch (true) {\r\n            case props.id !== undefined: {\r\n                return (<FullReport id={props.id} />);\r\n            }\r\n            case props.id === undefined: {\r\n                return (<NewReport isadmin={props.isadmin} refresh={props.refresh} handleCancel={() => handleCancel} callback={dialog} alertopen={alert} />);\r\n            }\r\n            default: {\r\n                return <></>\r\n            }\r\n        }\r\n    }\r\n    const Title = () => {\r\n        if (props.id !== undefined) {\r\n            title = <Typography variant=\"h5\" className={classes.AppBarTitle}>Número de Ticket: #{props.id}</Typography>;\r\n        } else {\r\n            title = <Typography variant=\"h5\" className={classes.AppBarTitle}>Levantar reporte</Typography>;\r\n        }\r\n        return title;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Dialog scroll=\"paper\" fullScreen open={open}>\r\n                <AppBar position=\"relative\"  >\r\n                    <Toolbar>\r\n                        <IconButton edge=\"start\" onClick={() => handleClickClose()} className={classes.BtnClose} ><CloseIcon /> </IconButton>\r\n                        {Title()}\r\n                    </Toolbar>\r\n                </AppBar>\r\n                {selectedDialog()}\r\n            </Dialog>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\n\r\n","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\views\\NewReport\\newReportcss.js",[],"C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\views\\NewReport\\Alerts\\Alerts.js",[],"C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\views\\Home\\home.js",[],"C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\services\\Methods\\validateClient.js",[],"C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\views\\LoginClient\\loginClient.js",["164"],"import { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport validateClient from '../../services/Methods/validateClient'\r\n\r\nfunction LoginClient(props) {\r\n    const { match: { params } } = props;\r\n    const [islogin, setlogin] = useState(false);\r\n    function checklogin() {\r\n        validateClient(0, 5, params.id);\r\n\r\n    }\r\n    useEffect(() => {\r\n        setlogin(localStorage.getItem(\"istokenClient\"))\r\n    }, [localStorage.getItem(\"istokenClient\")])\r\n\r\n    return (\r\n        <div>\r\n            {islogin ?\r\n                <Redirect to=\"/helper\" > </Redirect> : <div> {checklogin()} </div>\r\n            }\r\n\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default LoginClient;","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\views\\Admin\\admin.js",[],"C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\views\\LoginEmployes\\loginEmployes.js",["165"],"import { Button, TextField } from \"@material-ui/core\";\r\nimport Axios from \"axios\";\r\nimport axios from \"../../axios/Config\"\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport NavBar from \"../../components/NavBar/navBar\";\r\nimport { useAuthAdmin, useAuthLogin } from \"../PrivateRoutes/contexts/contextRoutes\";\r\nimport useStyles from './loginEmployescss'\r\n\r\nfunction LoginEmployed() {\r\n    const { setAuthTokensEmployes } = useAuthAdmin();\r\n    const { setAuthLogin } = useAuthLogin();\r\n    const [change, setchange] = useState(true)\r\n    const [errorUser, setErrorUser] = useState(false);\r\n    const [errorPass, setErrorPass] = useState(false);\r\n\r\n    const classes = useStyles();\r\n\r\n    const checkFields = () => {  // Revisar si estan llenos los campos\r\n        const getuser = document.getElementById(\"user\").value;\r\n        const getpassword = document.getElementById(\"password\").value;\r\n        switch (true) {\r\n            case getuser === \"\" && getpassword === \"\":\r\n                setErrorPass(true);\r\n                setErrorUser(true);\r\n                break;\r\n            case getuser === \"\":\r\n                setErrorUser(true);\r\n                break;\r\n            case getpassword === \"\":\r\n                setErrorPass(true);\r\n                break;\r\n            default:\r\n                checklogin(getuser, getpassword)\r\n                break;\r\n        }\r\n    }\r\n    const CancelToken = Axios.CancelToken;\r\n    const source = CancelToken.source();\r\n    const checklogin = async (user, pass) => {  // Revisar si existe el usuario y contraseña\r\n        let params = {};\r\n        params[\"user\"] = user;\r\n        params[\"password\"] = pass;\r\n        params[\"page\"] = 0;\r\n        params[\"size\"] = 5;\r\n        await axios.get(\"/api/developer/\", { cancelToken: source.token, params }).then(res => {\r\n            if (res.data.dev.length) {\r\n                localStorage.setItem(\"tokenDeveloper\", user);\r\n                localStorage.setItem(\"iddeveloper\", res.data);\r\n                setchange(!change)\r\n                setAuthTokensEmployes(true);\r\n                setAuthLogin(true)\r\n            } else {\r\n                console.log(\"false\")\r\n            }\r\n        }).catch(err => { console.log(err) });\r\n    }\r\n\r\n    useEffect(() => { // Ejecutar de nuevo el componente en caso que cambie el estado change\r\n        return () => {\r\n            source.cancel();\r\n        };\r\n    }, [change])\r\n\r\n    return (\r\n        <>{change ?\r\n            <>\r\n                <NavBar title=\"Iniciar Sesión\" />\r\n                <form className={classes.root} autoComplete=\"off\">\r\n                    <TextField error={errorUser} id=\"user\" required label=\"Usuario\" />\r\n                    <TextField error={errorPass} id=\"password\" required label=\"Password\" />\r\n                    <Button className={classes.btn} onClick={() => checkFields()}>Iniciar Sesión</Button >\r\n\r\n                </form>\r\n            </>\r\n            : <Redirect to=\"/admin\" />}\r\n        </>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default LoginEmployed;\r\n\r\n","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\views\\LoginEmployes\\loginEmployescss.js",[],"C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\views\\Cotizador\\Cotizador.js",[],"C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\views\\Cotizador\\CotizadorTable\\CotizadorTable.js",[],["166","167"],"C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\views\\Cotizador\\CotizadorAdmin\\cotizadorAdmin.js",[],"C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\components\\NavBar\\sidebar\\sidebar.js",[],"C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\views\\Cotizador\\CotizadorClient\\cotizadorclient.js",[],"C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\components\\Description_Helper\\Des_Helper.js",[],"C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\components\\Description_Helper\\Des_helper_css.js",[],"C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\Axios\\Config.js",["168"],"C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\views\\PrivateRoutes\\contexts\\contextRoutes.js",[],"C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\views\\PrivateRoutes\\privateadmin\\privateAdmin.js",[],"C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\views\\PrivateRoutes\\privateHelper\\privateHelper.js",[],"C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\services\\Methods\\StatusCatalog\\StatusService.js",["169"],"import axios from '../../../axios/Config';\r\n\r\nfunction statusCatalog() {\r\n    let catalog = [];\r\n\r\n    axios.get(\"/api/statuscatalog/\").then(res => {\r\n        res.data.map((item, index) => { catalog.push(item.id) })\r\n    }).catch(err => { console.log(err) });\r\n    return catalog;\r\n}\r\n\r\n\r\nexport default statusCatalog;","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\components\\Faq_View\\Faqs_View.js",["170"],"import { Component } from \"react\";\r\nimport Des_helper_css from \"../Description_Helper/Des_helper_css\";\r\nimport Faqs from \"./Faqs/Faqs\";\r\n\r\n\r\nfunction Faq() {\r\n    const classes = Des_helper_css();\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            <h3>Preguntas Frecuentes</h3>\r\n            <Faqs />\r\n        </div>\r\n    );\r\n\r\n}\r\nexport default Faq;\r\n","C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\components\\Faq_View\\Faqs\\Faqs.js",[],"C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\components\\NavBar\\navBar_css.js",[],"C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\axios\\Config.js",["171"],"C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\views\\FullReport\\fullReport_css.js",[],"C:\\Users\\ADN_01\\Documents\\Reactjs Proyectos\\systemtickets\\src\\services\\Methods\\Clients\\ClientService.js",[],{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","severity":1,"message":"177","line":49,"column":74,"nodeType":"178","endLine":49,"endColumn":88},{"ruleId":"179","severity":1,"message":"180","line":202,"column":8,"nodeType":"181","endLine":202,"endColumn":42,"suggestions":"182"},{"ruleId":"183","severity":1,"message":"184","line":1,"column":142,"nodeType":"185","messageId":"186","endLine":1,"endColumn":146},{"ruleId":"179","severity":1,"message":"187","line":33,"column":8,"nodeType":"181","endLine":33,"endColumn":10,"suggestions":"188"},{"ruleId":"183","severity":1,"message":"184","line":2,"column":59,"nodeType":"185","messageId":"186","endLine":2,"endColumn":63},{"ruleId":"179","severity":1,"message":"189","line":15,"column":9,"nodeType":"190","endLine":15,"endColumn":46},{"ruleId":"179","severity":1,"message":"191","line":64,"column":8,"nodeType":"181","endLine":64,"endColumn":16,"suggestions":"192"},{"ruleId":"172","replacedBy":"193"},{"ruleId":"174","replacedBy":"194"},{"ruleId":"183","severity":1,"message":"195","line":6,"column":7,"nodeType":"185","messageId":"186","endLine":6,"endColumn":13},{"ruleId":"196","severity":1,"message":"197","line":7,"column":36,"nodeType":"198","messageId":"199","endLine":7,"endColumn":38},{"ruleId":"183","severity":1,"message":"200","line":1,"column":10,"nodeType":"185","messageId":"186","endLine":1,"endColumn":19},{"ruleId":"183","severity":1,"message":"201","line":5,"column":7,"nodeType":"185","messageId":"186","endLine":5,"endColumn":12},"no-native-reassign",["202"],"no-negated-in-lhs",["203"],"react/jsx-pascal-case","Imported JSX component Des_Helper must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'UpdateTable'. Either include it or remove the dependency array.","ArrayExpression",["204"],"no-unused-vars","'Grid' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'gclients'. Either include it or remove the dependency array.",["205"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","React Hook useEffect has a missing dependency: 'source'. Either include it or remove the dependency array.",["206"],["202"],["203"],"'heroku' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Component' is defined but never used.","'local' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},{"desc":"211","fix":"212"},"Update the dependencies array to be: [page, items, pagesize, isrefresh, UpdateTable]",{"range":"213","text":"214"},"Update the dependencies array to be: [gclients]",{"range":"215","text":"216"},"Update the dependencies array to be: [change, source]",{"range":"217","text":"218"},[9681,9715],"[page, items, pagesize, isrefresh, UpdateTable]",[1259,1261],"[gclients]",[2463,2471],"[change, source]"]